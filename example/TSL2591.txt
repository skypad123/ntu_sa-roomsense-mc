//
// Created by Sky Livingston on 1/12/22.
//

#include "TSL2591.h"
#include <Wire.h>
#include "Adafruit_Sensor.h"
#include "Adafruit_TSL2591.h"

Adafruit_TSL2591 tsl = Adafruit_TSL2591(2591);      //pass a num



//this function just display the details about this sensor
void displaySensorDetails(void)
{
    sensor_t sensor;
    tsl.getSensor(&sensor);
    Serial.println("------------- Display Sensor Details -------------");
    Serial.print("Sensor:       "); Serial.println(sensor.name);
    Serial.print("Driver Ver:   "); Serial.println(sensor.version);
    Serial.print("Unique ID:    "); Serial.println(sensor.sensor_id);
    Serial.print("Max Value:    "); Serial.print(sensor.max_value); Serial.println(" lux");
    Serial.print("Min Value:    "); Serial.print(sensor.min_value); Serial.println(" lux");
    Serial.print("Resolution:   "); Serial.print(sensor.resolution, 4); Serial.println(" lux");
    Serial.println("--------------------------------------------------");
    Serial.println();
    delay(3000);
}



//this function configures the gain and integration time for the sensor
void ConfigureSensor(void){
    tsl.setGain(TSL2591_GAIN_MED);
    tsl.setTiming(TSL2591_INTEGRATIONTIME_300MS);

    Serial.println("----------Configure Sensor----------");
    Serial.print("Gain:   ");
    tsl2591Gain_t gain = tsl.getGain();
    switch(gain){
        case TSL2591_GAIN_LOW:
            Serial.println("1x (Low)");
            break;
        case TSL2591_GAIN_MED:
            Serial.println("25x (Medium)");
            break;
        case TSL2591_GAIN_HIGH:
            Serial.println("428x (High)");
            break;
        case TSL2591_GAIN_MAX:
            Serial.println("9876x (Max)");
            break;
    }
    Serial.print("Timing:   ");
    Serial.print((tsl.getTiming() + 1) * 100, DEC); Serial.println(" ms");
    Serial.println("-----------------------------------");
    Serial.println();
}



void setup() {
    Serial.begin(9600);
    Serial.println("Starting Adafruit TSL2591 Test!");

    if (tsl.begin()){   //check if sensor is correct
        Serial.println("Found a TSL2591 sensor");
    }
    else{
        Serial.println("No sensor found... check your wiring?");
    }
    Serial.println();
    displaySensorDetails();
    ConfigureSensor();
}

void loop() {
    //simpleRead();       //measures the Full spectrum, returns raw 16-bit ADC values.
    //advancedRead();       //returns 32 bits where first 16 bits = IR spectrum, remaining 16 bits = Full spectrum.
    unifiedSensorAPIRead();   //returns value in lux only.
    delay(3000);

}







//this function just read one of the channels between infrared, full spectrum and visible (visible is actually just the difference between the first two)
//It also returns raw 16-bit ADC values.
void simpleRead(void){
    uint16_t x = tsl.getLuminosity(TSL2591_VISIBLE);

    //this can take 100-600 milliseconds.
    Serial.print("["); Serial.print(millis()); Serial.print(" ms] ");
    Serial.print("Luminosity: ");
    Serial.println(x, DEC);
}


//this function can read IR and full spectrum at once and convert to lux
//    it reads 32 bits with top 16 bits IR, and bottom 16 bits full spectrum
//    thus you can do whatever comparisions you want.
void advancedRead(void){
    uint32_t lum = tsl.getFullLuminosity();
    uint16_t ir, full;
    ir = lum >> 16;
    full = lum & 0xFFFF;
    Serial.print("[ "); Serial.print(millis()); Serial.print(" ms] ");
    Serial.print("IR: "); Serial.print(ir); Serial.print(" ");
    Serial.print("Full: "); Serial.print(full); Serial.print(" ");
    Serial.print("Visible: "); Serial.print(full - ir); Serial.print(" ");
    Serial.print("Lux: "); Serial.println(tsl.calculateLux(full, ir), 6);
}


//this function output in lux only
void unifiedSensorAPIRead(void){

    sensors_event_t event;
    tsl.getEvent(&event);

    //light is measured in lux!
    Serial.print("[ "); Serial.print(event.timestamp); Serial.print(" ms ] ");
    if ((event.light == 0) ||     //saturated?
        (event.light > 4294966000.0) ||       //float overflow?
        (event.light < -4294966000.0)){       //float underflow?
        Serial.println("Invalid data (adjust gain or timing)");
    }
    else{
        Serial.print(event.light); Serial.println(" lux");
    }
}